{"ast":null,"code":"var _jsxFileName = \"/Users/justinachua/Downloads/final/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getDocs, collection, deleteDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport Markdown from \"marked-react\";\nimport { render } from \"@testing-library/react\";\nimport { Box, Button, Center, Heading, Text, Stack, Avatar, useColorModeValue, Image } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  isAuth\n}) {\n  _s();\n\n  const [postLists, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  let navigate = useNavigate();\n\n  const deletePost = async id => {\n    const postDoc = doc(db, \"posts\", id);\n    await deleteDoc(postDoc);\n  };\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef);\n      setPostList(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getPosts();\n  }, [deletePost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: postLists.map(post => {\n      if (post.postText) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postHeader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: /*#__PURE__*/_jsxDEV(Markdown, {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editPost\",\n              children: isAuth && post.author_id === auth.currentUser.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  navigate(`/edit/${post.id}`);\n                },\n                children: [\" \", \"\\u270E\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"readPost\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  navigate(`/read/${post.id}`);\n                },\n                children: [\" \", \"\\uD83D\\uDCD6\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"deletePost\",\n              children: isAuth && post.author_id === auth.currentUser.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deletePost(post.id);\n                },\n                children: [\" \", \"\\uD83D\\uDDD1\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTextContainerHome\",\n            children: [() => {\n              if (post.postText == \"aaaa\") {\n                return \"asdf\";\n              } else {\n                return post.postText;\n              }\n            }, post.postText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Created at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 20\n            }, this), \": \", post.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), post.updated_at && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Updated at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 42\n            }, this), \": \", post.updated_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"@\", post.author_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"2T8nJqMVRKkwlyFb2XdvD2MTQpU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/justinachua/Downloads/final/src/pages/Home.js"],"names":["React","useEffect","useState","getDocs","collection","deleteDoc","doc","auth","db","useNavigate","Markdown","render","Box","Button","Center","Heading","Text","Stack","Avatar","useColorModeValue","Image","Home","isAuth","postLists","setPostList","postsCollectionRef","navigate","deletePost","id","postDoc","getPosts","data","docs","map","post","postText","title","author_id","currentUser","uid","created_at","updated_at","author_name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getDocs, collection, deleteDoc, doc } from \"firebase/firestore\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Markdown from \"marked-react\";\r\nimport { render } from \"@testing-library/react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Heading,\r\n  Text,\r\n  Stack,\r\n  Avatar,\r\n  useColorModeValue,\r\n  Image\r\n} from '@chakra-ui/react';\r\n\r\nfunction Home({ isAuth }) {\r\n  const [postLists, setPostList] = useState([]);\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n\r\n\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const deletePost = async (id) => {\r\n    const postDoc = doc(db, \"posts\", id);\r\n    await deleteDoc(postDoc);\r\n  };\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      const data = await getDocs(postsCollectionRef);\r\n      setPostList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n\r\n    getPosts();\r\n  }, [deletePost]);\r\n\r\n\r\n  return (\r\n    <div className=\"homePage\">\r\n      {postLists.map((post) => {\r\n        if (post.postText) {\r\n          return (\r\n\r\n            \r\n\r\n          \r\n            <div className=\"post\">\r\n              <div className=\"postHeader\">\r\n                <div className=\"title\">\r\n\r\n                  <h1><Markdown>{post.title}</Markdown></h1>\r\n                </div>\r\n\r\n                <div className=\"editPost\">\r\n                  {isAuth && post.author_id === auth.currentUser.uid && (\r\n                    <button\r\n                      onClick={() => {\r\n                        navigate(`/edit/${post.id}`);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      &#9998;\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n              <div className=\"readPost\">\r\n                <button onClick={() => {\r\n                  navigate(`/read/${post.id}`);\r\n                }}\r\n                >\r\n                {\" \"}\r\n                📖\r\n              </button>\r\n                </div>\r\n\r\n\r\n                <div className=\"deletePost\">\r\n                  {isAuth && post.author_id === auth.currentUser.uid && (\r\n                    <button\r\n                      onClick={() => {\r\n                        deletePost(post.id);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      &#128465;\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n              </div>\r\n              \r\n              \r\n              <div className=\"postTextContainerHome\">\r\n              {() => {\r\n                  if(post.postText == \"aaaa\"){\r\n                    return(\"asdf\");\r\n                  }\r\n                  else{\r\n                    return(post.postText);\r\n                  }\r\n                }}\r\n\r\n                \r\n                {post.postText} </div>\r\n\r\n                <p><b>Created at</b>: {post.created_at}</p>\r\n                {post.updated_at && ( <p><b>Updated at</b>: {post.updated_at}</p>)}\r\n                <h3>@{post.author_name}</h3>\r\n            </div>\r\n            \r\n\r\n          );\r\n        }\r\n        })}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}