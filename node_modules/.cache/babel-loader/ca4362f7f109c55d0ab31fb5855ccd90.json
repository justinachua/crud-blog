{"ast":null,"code":"var _jsxFileName = \"/Users/justinachua/Downloads/final/src/pages/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { updateDoc, getDocs, collection, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditPost({\n  isAuth\n}) {\n  _s();\n\n  const [postLists, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  const [title, setTitle] = useState('');\n  const [postText, setPostText] = useState('');\n  let url = window.location.href;\n  let id = url.split(\"/\").pop();\n  let navigate = useNavigate();\n\n  const editPost = async () => {\n    const d = new Date();\n    const postDoc = doc(db, \"posts\", id);\n    await updateDoc(postDoc, {\n      title,\n      postText,\n      updated_at: d.toLocaleString()\n    });\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef);\n      setPostList(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    if (!isAuth) {\n      navigate(\"/login\");\n    }\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: postLists.map(post => {\n      if (post.id === id) {\n        // only set state if its empty\n        if (title === '' && postText === '') {\n          setTitle(post.title);\n          setPostText(post.postText);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cpContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Edit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputGp\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Title...\",\n              defaultValue: post.title,\n              onChange: event => {\n                setTitle(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputGp\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Post:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Post...\",\n              defaultValue: post.postText,\n              onChange: event => {\n                setPostText(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: editPost,\n            children: \" Edit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"6Aea+EA0bBs3/vr/v4O12MTk5bE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/justinachua/Downloads/final/src/pages/EditPost.js"],"names":["React","useState","useEffect","updateDoc","getDocs","collection","doc","db","useNavigate","EditPost","isAuth","postLists","setPostList","postsCollectionRef","title","setTitle","postText","setPostText","url","window","location","href","id","split","pop","navigate","editPost","d","Date","postDoc","updated_at","toLocaleString","getPosts","data","docs","map","post","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { updateDoc, getDocs, collection, doc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction EditPost({ isAuth }) {\r\n  const [postLists, setPostList] = useState([]);\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [postText, setPostText] = useState('');\r\n\r\n  let url = window.location.href;\r\n  let id = url.split(\"/\").pop();\r\n  let navigate = useNavigate();\r\n\r\n  const editPost = async () => {\r\n    const d = new Date();\r\n    const postDoc = doc(db, \"posts\", id)\r\n    await updateDoc(postDoc, {\r\n      title,\r\n      postText,\r\n      updated_at: d.toLocaleString(),\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      const data = await getDocs(postsCollectionRef);\r\n      setPostList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    }\r\n\r\n    if (!isAuth) {\r\n      navigate(\"/login\");\r\n    }\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      {postLists.map((post) => {\r\n        if (post.id === id) {\r\n          // only set state if its empty\r\n          if(title === '' && postText === '') {\r\n            setTitle(post.title);\r\n            setPostText(post.postText);\r\n          }\r\n          return (\r\n            <div className=\"cpContainer\">\r\n              <h1>Edit Post</h1>\r\n              <div className=\"inputGp\">\r\n                <label> Title:</label>\r\n                <input\r\n                  placeholder=\"Title...\"\r\n                  defaultValue={post.title}\r\n                  onChange={(event) => {\r\n                    setTitle(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"inputGp\">\r\n                <label> Post:</label>\r\n                <textarea\r\n                  placeholder=\"Post...\"\r\n                  defaultValue={post.postText}\r\n                  onChange={(event) => {\r\n                    setPostText(event.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <button onClick={editPost}> Edit Post</button>\r\n            </div>\r\n          );}\r\n        })}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}