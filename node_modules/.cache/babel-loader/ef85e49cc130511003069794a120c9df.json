{"ast":null,"code":"var _jsxFileName = \"/Users/justinachua/Downloads/final/src/pages/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Flex, Box, FormControl, FormLabel, Input, InputGroup, HStack, InputRightElement, Stack, Button, Heading, Text, useColorModeValue, Link } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost({\n  isAuth\n}) {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  let url = window.location.href;\n  let id = url.split(\"/\").pop();\n  const postsCollectionRef = collection(db, \"posts\");\n  let navigate = useNavigate();\n\n  const createPost = async () => {\n    const d = new Date();\n    await addDoc(postsCollectionRef, {\n      title,\n      postText,\n      author_name: auth.currentUser.displayName,\n      author_id: auth.currentUser.uid,\n      created_at: d.toLocaleString() // updated_at: d.toLocaleString(),\n\n    });\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (!isAuth) {\n      navigate(\"/login\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cpContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create A Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Title...\",\n          onChange: event => {\n            setTitle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Post...\",\n          onChange: event => {\n            setPostText(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \" Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePost, \"NpGVNYZcyFN9+sRI3gQPS5VrHTM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/justinachua/Downloads/final/src/pages/CreatePost.js"],"names":["React","useState","useEffect","addDoc","collection","db","auth","useNavigate","Flex","Box","FormControl","FormLabel","Input","InputGroup","HStack","InputRightElement","Stack","Button","Heading","Text","useColorModeValue","Link","CreatePost","isAuth","title","setTitle","postText","setPostText","url","window","location","href","id","split","pop","postsCollectionRef","navigate","createPost","d","Date","author_name","currentUser","displayName","author_id","uid","created_at","toLocaleString","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { db, auth } from \"../firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  HStack,\r\n  InputRightElement,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n} from '@chakra-ui/react';\r\n\r\nfunction CreatePost({ isAuth }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [postText, setPostText] = useState(\"\");\r\n  let url = window.location.href;\r\n  let id = url.split(\"/\").pop();\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n  let navigate = useNavigate();\r\n\r\n  const createPost = async () => {\r\n    const d = new Date();\r\n    await addDoc(postsCollectionRef, {\r\n      title,\r\n      postText,\r\n      author_name: auth.currentUser.displayName,\r\n      author_id: auth.currentUser.uid ,\r\n      created_at: d.toLocaleString(),\r\n      // updated_at: d.toLocaleString(),\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <div className=\"cpContainer\">\r\n        <h1>Create A Post</h1>\r\n        <div className=\"inputGp\">\r\n          <label> Title:</label>\r\n          <input\r\n            placeholder=\"Title...\"\r\n            onChange={(event) => {\r\n              setTitle(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"inputGp\">\r\n          <label> Post:</label>\r\n          <textarea\r\n            placeholder=\"Post...\"\r\n            onChange={(event) => {\r\n              setPostText(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <button onClick={createPost}> Submit Post</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}