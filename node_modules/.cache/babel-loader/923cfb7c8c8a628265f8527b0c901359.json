{"ast":null,"code":"var _jsxFileName = \"/Users/justinachua/Downloads/final/src/pages/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Flex, Box, FormControl, FormLabel, Input, InputGroup, HStack, InputRightElement, Stack, Button, Heading, Text, useColorModeValue, Link } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost({\n  isAuth\n}) {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  let url = window.location.href;\n  let id = url.split(\"/\").pop();\n  const postsCollectionRef = collection(db, \"posts\");\n  let navigate = useNavigate();\n\n  const createPost = async () => {\n    const d = new Date();\n    await addDoc(postsCollectionRef, {\n      title,\n      postText,\n      author_name: auth.currentUser.displayName,\n      author_id: auth.currentUser.uid,\n      created_at: d.toLocaleString() // updated_at: d.toLocaleString(),\n\n    });\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    if (!isAuth) {\n      navigate(\"/login\");\n    }\n  }, []);\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      minH: '100vh',\n      align: 'center',\n      justify: 'center' // bg={useColorModeValue('gray.50', 'gray.800')}\n      ,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        maxW: 'lg',\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          align: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: '4xl',\n            textAlign: 'center',\n            children: \"Create a new post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: 'lg',\n            color: 'gray.600',\n            children: \"something something\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          rounded: 'lg' // bg={useColorModeValue('white', 'gray.700')}\n          ,\n          boxShadow: 'lg',\n          p: 8,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"email\",\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"title\",\n                placeholder: \"Title...\",\n                onChange: event => {\n                  setTitle(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"content\",\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Post...\",\n                  onChange: event => {\n                    setPostText(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 10,\n              pt: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                loadingText: \"Submitting\",\n                size: \"lg\",\n                bg: 'blue.400',\n                color: 'white',\n                _hover: {\n                  bg: 'blue.500'\n                },\n                onClick: createPost,\n                children: \"Publish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePost, \"ogEWABErRNA/ic6pc0zK5UMJc1c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/justinachua/Downloads/final/src/pages/CreatePost.js"],"names":["React","useState","useEffect","addDoc","collection","db","auth","useNavigate","Flex","Box","FormControl","FormLabel","Input","InputGroup","HStack","InputRightElement","Stack","Button","Heading","Text","useColorModeValue","Link","CreatePost","isAuth","title","setTitle","postText","setPostText","url","window","location","href","id","split","pop","postsCollectionRef","navigate","createPost","d","Date","author_name","currentUser","displayName","author_id","uid","created_at","toLocaleString","showPassword","setShowPassword","event","target","value","bg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { db, auth } from \"../firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  HStack,\r\n  InputRightElement,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  Text,\r\n  useColorModeValue,\r\n  Link,\r\n} from '@chakra-ui/react';\r\n\r\nfunction CreatePost({ isAuth }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [postText, setPostText] = useState(\"\");\r\n  let url = window.location.href;\r\n  let id = url.split(\"/\").pop();\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n  let navigate = useNavigate();\r\n\r\n  const createPost = async () => {\r\n    const d = new Date();\r\n    await addDoc(postsCollectionRef, {\r\n      title,\r\n      postText,\r\n      author_name: auth.currentUser.displayName,\r\n      author_id: auth.currentUser.uid ,\r\n      created_at: d.toLocaleString(),\r\n      // updated_at: d.toLocaleString(),\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isAuth) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n    \r\n    {/* <div className=\"createPostPage\"> */}\r\n      <Flex\r\n      minH={'100vh'}\r\n      align={'center'}\r\n      justify={'center'}\r\n      // bg={useColorModeValue('gray.50', 'gray.800')}\r\n      >\r\n      <Stack maxW={'lg'} >\r\n        <Stack align={'center'}>\r\n          <Heading fontSize={'4xl'} textAlign={'center'}>\r\n            Create a new post\r\n          </Heading>\r\n          <Text fontSize={'lg'} color={'gray.600'}>\r\n            something something \r\n          </Text>\r\n        </Stack>\r\n        <Box\r\n          rounded={'lg'}\r\n          // bg={useColorModeValue('white', 'gray.700')}\r\n          boxShadow={'lg'}\r\n          p={8}\r\n          >\r\n          <Stack spacing={4}>\r\n            <FormControl id=\"email\" isRequired>\r\n              <FormLabel>Title</FormLabel>\r\n              <Input type=\"title\" placeholder=\"Title...\"\r\n            onChange={(event) => {\r\n              setTitle(event.target.value);\r\n            }} />\r\n            </FormControl>\r\n            <FormControl id=\"content\" isRequired>\r\n              <FormLabel>Content</FormLabel>\r\n              <InputGroup>\r\n                <Input placeholder=\"Post...\"\r\n            onChange={(event) => {\r\n              setPostText(event.target.value);\r\n            }}\r\n                 />\r\n              </InputGroup>\r\n            </FormControl>\r\n            <Stack spacing={10} pt={2}>\r\n              <Button\r\n                loadingText=\"Submitting\"\r\n                size=\"lg\"\r\n                bg={'blue.400'}\r\n                color={'white'}\r\n                _hover={{\r\n                  bg: 'blue.500',\r\n                }}\r\n                onClick={createPost}\r\n                >\r\n                Publish\r\n              </Button>\r\n            </Stack>\r\n            {/* <Stack pt={6}>\r\n              <Text align={'center'}>\r\n                Already a user? <Link color={'blue.400'}>Login</Link>\r\n              </Text>\r\n            </Stack> */}\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n    {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}