{"ast":null,"code":"var _jsxFileName = \"/home/chomsky/Downloads/final/src/pages/ReadPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getDocs, collection, deleteDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\nimport Markdown from \"marked-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReadPost({\n  isAuth\n}) {\n  _s();\n\n  const [postLists, setPostList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  let url = window.location.href;\n  let id = url.split(\"/\").pop();\n  let navigate = useNavigate();\n\n  const deletePost = async id => {\n    const postDoc = doc(db, \"posts\", id);\n    await deleteDoc(postDoc);\n  };\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await getDocs(postsCollectionRef);\n      setPostList(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getPosts();\n  }, [deletePost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: postLists.map(post => {\n      if (post.id == id) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postHeader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: /*#__PURE__*/_jsxDEV(Markdown, {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editPost\",\n              children: isAuth && post.author_id === auth.currentUser.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  navigate(`/edit/${post.id}`);\n                },\n                children: [\" \", \"\\u270E\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"deletePost\",\n              children: isAuth && post.author_id === auth.currentUser.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  deletePost(post.id);\n                },\n                children: [\" \", \"\\uD83D\\uDDD1\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTextContainer\",\n            children: [\" \", post.postText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Created at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 20\n            }, this), \": \", post.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Updated at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 20\n            }, this), \": \", post.updated_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"@\", post.author_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReadPost, \"2T8nJqMVRKkwlyFb2XdvD2MTQpU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ReadPost;\nexport default ReadPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPost\");","map":{"version":3,"sources":["/home/chomsky/Downloads/final/src/pages/ReadPost.js"],"names":["React","useEffect","useState","getDocs","collection","deleteDoc","doc","auth","db","useNavigate","Markdown","ReadPost","isAuth","postLists","setPostList","postsCollectionRef","url","window","location","href","id","split","pop","navigate","deletePost","postDoc","getPosts","data","docs","map","post","title","author_id","currentUser","uid","postText","created_at","updated_at","author_name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getDocs, collection, deleteDoc, doc } from \"firebase/firestore\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Markdown from \"marked-react\";\r\n\r\nfunction ReadPost({ isAuth }) {\r\n  const [postLists, setPostList] = useState([]);\r\n  const postsCollectionRef = collection(db, \"posts\");\r\n  let url = window.location.href;\r\n  let id = url.split(\"/\").pop();\r\n  let navigate = useNavigate();\r\n\r\n  const deletePost = async (id) => {\r\n    const postDoc = doc(db, \"posts\", id);\r\n    await deleteDoc(postDoc);\r\n  };\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      const data = await getDocs(postsCollectionRef);\r\n      setPostList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n\r\n    getPosts();\r\n  }, [deletePost]);\r\n\r\n\r\n  return (\r\n    <div className=\"homePage\">\r\n      {postLists.map((post) => {\r\n        if (post.id == id) {\r\n            return (\r\n            <div className=\"post\">\r\n                <div className=\"postHeader\">\r\n                <div className=\"title\">\r\n\r\n                    <h1><Markdown>{post.title}</Markdown></h1>\r\n                </div>\r\n\r\n                <div className=\"editPost\">\r\n                    {isAuth && post.author_id === auth.currentUser.uid && (\r\n                    <button\r\n                        onClick={() => {\r\n                        navigate(`/edit/${post.id}`);\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        &#9998;\r\n                    </button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"deletePost\">\r\n                    {isAuth && post.author_id === auth.currentUser.uid && (\r\n                    <button\r\n                        onClick={() => {\r\n                        deletePost(post.id);\r\n                        }}\r\n                    >\r\n                        {\" \"}\r\n                        &#128465;\r\n                    </button>\r\n                    )}\r\n                </div>\r\n\r\n                </div>\r\n                <div className=\"postTextContainer\"> {post.postText} </div>\r\n                <p><b>Created at</b>: {post.created_at}</p>\r\n                <p><b>Updated at</b>: {post.updated_at}</p>\r\n                <h3>@{post.author_name}</h3>\r\n            </div>\r\n            );}\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadPost;\r\n"]},"metadata":{},"sourceType":"module"}