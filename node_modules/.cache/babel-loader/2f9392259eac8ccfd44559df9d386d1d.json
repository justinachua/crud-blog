{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  exports.defaults = getDefaults();\n\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n  /**\n   * Helpers\n   */\n\n\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n  /**\n   * Block-Level Grammar\n   */\n\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n\n\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n  /**\n   * Renderer\n   */\n\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype; // no need for block level renderers\n\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n  /**\n   * Slugger generates header id\n   */\n\n\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n  /**\n   * Parsing & Compiling\n   */\n\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n  /**\n   * Marked\n   */\n\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/justinachua/Downloads/final/node_modules/marked/lib/marked.umd.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","_iterator","_step","_char","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","escape$1","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","Lexer","create","inlineQueue","lex","lexInline","_this","leading","tabs","repeat","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","callback","err","pending","setTimeout","_tokens","message","setOptions","use","_len","args","_key","opts","apply","concat","childTokens","hasExtensions","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_loop3","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]},"metadata":{},"sourceType":"script"}